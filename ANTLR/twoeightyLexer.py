# Generated from twoeighty.g4 by ANTLR 4.5.3
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2&")
        buf.write("\u00c3\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3")
        buf.write("\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t")
        buf.write("\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\30")
        buf.write("\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\35")
        buf.write("\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3$\5$\u00b8")
        buf.write("\n$\3$\6$\u00bb\n$\r$\16$\u00bc\3%\6%\u00c0\n%\r%\16%")
        buf.write("\u00c1\2\2&\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&\3\2\5\3\2c|\3\2\62;\4\2\62;c|\u00c5\2\3\3\2\2\2")
        buf.write("\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r")
        buf.write("\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3")
        buf.write("\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2")
        buf.write("\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'")
        buf.write("\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2")
        buf.write("\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29")
        buf.write("\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2")
        buf.write("C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\3K\3\2\2\2")
        buf.write("\5M\3\2\2\2\7O\3\2\2\2\tR\3\2\2\2\13T\3\2\2\2\rV\3\2\2")
        buf.write("\2\17Z\3\2\2\2\21`\3\2\2\2\23g\3\2\2\2\25i\3\2\2\2\27")
        buf.write("n\3\2\2\2\31p\3\2\2\2\33r\3\2\2\2\35y\3\2\2\2\37{\3\2")
        buf.write("\2\2!\u0080\3\2\2\2#\u0082\3\2\2\2%\u0086\3\2\2\2\'\u0088")
        buf.write("\3\2\2\2)\u008b\3\2\2\2+\u008e\3\2\2\2-\u0090\3\2\2\2")
        buf.write("/\u0092\3\2\2\2\61\u0094\3\2\2\2\63\u0096\3\2\2\2\65\u0099")
        buf.write("\3\2\2\2\67\u009b\3\2\2\29\u009d\3\2\2\2;\u009f\3\2\2")
        buf.write("\2=\u00a3\3\2\2\2?\u00a7\3\2\2\2A\u00ab\3\2\2\2C\u00af")
        buf.write("\3\2\2\2E\u00b4\3\2\2\2G\u00b7\3\2\2\2I\u00bf\3\2\2\2")
        buf.write("KL\7=\2\2L\4\3\2\2\2MN\7?\2\2N\6\3\2\2\2OP\7o\2\2PQ\7")
        buf.write("u\2\2Q\b\3\2\2\2RS\7u\2\2S\n\3\2\2\2TU\7<\2\2U\f\3\2\2")
        buf.write("\2VW\7e\2\2WX\7n\2\2XY\7t\2\2Y\16\3\2\2\2Z[\7e\2\2[\\")
        buf.write("\7n\2\2\\]\7g\2\2]^\7c\2\2^_\7t\2\2_\20\3\2\2\2`a\7e\2")
        buf.write("\2ab\7q\2\2bc\7n\2\2cd\7q\2\2de\7w\2\2ef\7t\2\2f\22\3")
        buf.write("\2\2\2gh\7%\2\2h\24\3\2\2\2ij\7t\2\2jk\7g\2\2kl\7e\2\2")
        buf.write("lm\7v\2\2m\26\3\2\2\2no\7t\2\2o\30\3\2\2\2pq\7.\2\2q\32")
        buf.write("\3\2\2\2rs\7e\2\2st\7k\2\2tu\7t\2\2uv\7e\2\2vw\7n\2\2")
        buf.write("wx\7g\2\2x\34\3\2\2\2yz\7e\2\2z\36\3\2\2\2{|\7n\2\2|}")
        buf.write("\7k\2\2}~\7p\2\2~\177\7g\2\2\177 \3\2\2\2\u0080\u0081")
        buf.write("\7n\2\2\u0081\"\3\2\2\2\u0082\u0083\7c\2\2\u0083\u0084")
        buf.write("\7t\2\2\u0084\u0085\7e\2\2\u0085$\3\2\2\2\u0086\u0087")
        buf.write("\7c\2\2\u0087&\3\2\2\2\u0088\u0089\7-\2\2\u0089\u008a")
        buf.write("\7-\2\2\u008a(\3\2\2\2\u008b\u008c\7/\2\2\u008c\u008d")
        buf.write("\7/\2\2\u008d*\3\2\2\2\u008e\u008f\7*\2\2\u008f,\3\2\2")
        buf.write("\2\u0090\u0091\7+\2\2\u0091.\3\2\2\2\u0092\u0093\7\'\2")
        buf.write("\2\u0093\60\3\2\2\2\u0094\u0095\7\61\2\2\u0095\62\3\2")
        buf.write("\2\2\u0096\u0097\7\61\2\2\u0097\u0098\7\61\2\2\u0098\64")
        buf.write("\3\2\2\2\u0099\u009a\7,\2\2\u009a\66\3\2\2\2\u009b\u009c")
        buf.write("\7-\2\2\u009c8\3\2\2\2\u009d\u009e\7/\2\2\u009e:\3\2\2")
        buf.write("\2\u009f\u00a0\7u\2\2\u00a0\u00a1\7k\2\2\u00a1\u00a2\7")
        buf.write("p\2\2\u00a2<\3\2\2\2\u00a3\u00a4\7e\2\2\u00a4\u00a5\7")
        buf.write("q\2\2\u00a5\u00a6\7u\2\2\u00a6>\3\2\2\2\u00a7\u00a8\7")
        buf.write("v\2\2\u00a8\u00a9\7c\2\2\u00a9\u00aa\7p\2\2\u00aa@\3\2")
        buf.write("\2\2\u00ab\u00ac\7r\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae")
        buf.write("\7y\2\2\u00aeB\3\2\2\2\u00af\u00b0\7t\2\2\u00b0\u00b1")
        buf.write("\7c\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7f\2\2\u00b3D\3")
        buf.write("\2\2\2\u00b4\u00b5\t\2\2\2\u00b5F\3\2\2\2\u00b6\u00b8")
        buf.write("\7/\2\2\u00b7\u00b6\3\2\2\2\u00b7\u00b8\3\2\2\2\u00b8")
        buf.write("\u00ba\3\2\2\2\u00b9\u00bb\t\3\2\2\u00ba\u00b9\3\2\2\2")
        buf.write("\u00bb\u00bc\3\2\2\2\u00bc\u00ba\3\2\2\2\u00bc\u00bd\3")
        buf.write("\2\2\2\u00bdH\3\2\2\2\u00be\u00c0\t\4\2\2\u00bf\u00be")
        buf.write("\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00bf\3\2\2\2\u00c1")
        buf.write("\u00c2\3\2\2\2\u00c2J\3\2\2\2\6\2\u00b7\u00bc\u00c1\2")
        return buf.getvalue()


class twoeightyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    ID = 34
    INT = 35
    COLOUR = 36

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'='", "'ms'", "'s'", "':'", "'clr'", "'clear'", "'colour'", 
            "'#'", "'rect'", "'r'", "','", "'circle'", "'c'", "'line'", 
            "'l'", "'arc'", "'a'", "'++'", "'--'", "'('", "')'", "'%'", 
            "'/'", "'//'", "'*'", "'+'", "'-'", "'sin'", "'cos'", "'tan'", 
            "'pow'", "'rand'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "COLOUR" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "ID", "INT", "COLOUR" ]

    grammarFileName = "twoeighty.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.3")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


