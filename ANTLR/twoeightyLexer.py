# Generated from /home/reece/Programming/rend-python/twoeighty.g4 by ANTLR 4.7
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\'")
        buf.write("\u00c9\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7")
        buf.write("\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3")
        buf.write("\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3")
        buf.write("\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3")
        buf.write("\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\27")
        buf.write("\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\34")
        buf.write("\3\34\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37")
        buf.write("\3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#")
        buf.write("\3#\3$\3$\3%\5%\u00be\n%\3%\6%\u00c1\n%\r%\16%\u00c2\3")
        buf.write("&\6&\u00c6\n&\r&\16&\u00c7\2\2\'\3\3\5\4\7\5\t\6\13\7")
        buf.write("\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21")
        buf.write("!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'\3\2\5\3\2c|\3\2\62;\4\2")
        buf.write("\62;c|\2\u00cb\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t")
        buf.write("\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3")
        buf.write("\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2")
        buf.write("\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2")
        buf.write("\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2")
        buf.write("\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\3M\3\2\2\2\5O\3\2\2\2\7Q\3\2")
        buf.write("\2\2\tT\3\2\2\2\13V\3\2\2\2\rX\3\2\2\2\17\\\3\2\2\2\21")
        buf.write("b\3\2\2\2\23i\3\2\2\2\25k\3\2\2\2\27p\3\2\2\2\31r\3\2")
        buf.write("\2\2\33t\3\2\2\2\35{\3\2\2\2\37}\3\2\2\2!\u0082\3\2\2")
        buf.write("\2#\u0084\3\2\2\2%\u0088\3\2\2\2\'\u008a\3\2\2\2)\u008d")
        buf.write("\3\2\2\2+\u0090\3\2\2\2-\u0092\3\2\2\2/\u0094\3\2\2\2")
        buf.write("\61\u0096\3\2\2\2\63\u0098\3\2\2\2\65\u009b\3\2\2\2\67")
        buf.write("\u009d\3\2\2\29\u009f\3\2\2\2;\u00a1\3\2\2\2=\u00a5\3")
        buf.write("\2\2\2?\u00a9\3\2\2\2A\u00ad\3\2\2\2C\u00b1\3\2\2\2E\u00b6")
        buf.write("\3\2\2\2G\u00ba\3\2\2\2I\u00bd\3\2\2\2K\u00c5\3\2\2\2")
        buf.write("MN\7=\2\2N\4\3\2\2\2OP\7?\2\2P\6\3\2\2\2QR\7o\2\2RS\7")
        buf.write("u\2\2S\b\3\2\2\2TU\7u\2\2U\n\3\2\2\2VW\7<\2\2W\f\3\2\2")
        buf.write("\2XY\7e\2\2YZ\7n\2\2Z[\7t\2\2[\16\3\2\2\2\\]\7e\2\2]^")
        buf.write("\7n\2\2^_\7g\2\2_`\7c\2\2`a\7t\2\2a\20\3\2\2\2bc\7e\2")
        buf.write("\2cd\7q\2\2de\7n\2\2ef\7q\2\2fg\7w\2\2gh\7t\2\2h\22\3")
        buf.write("\2\2\2ij\7%\2\2j\24\3\2\2\2kl\7t\2\2lm\7g\2\2mn\7e\2\2")
        buf.write("no\7v\2\2o\26\3\2\2\2pq\7t\2\2q\30\3\2\2\2rs\7.\2\2s\32")
        buf.write("\3\2\2\2tu\7e\2\2uv\7k\2\2vw\7t\2\2wx\7e\2\2xy\7n\2\2")
        buf.write("yz\7g\2\2z\34\3\2\2\2{|\7e\2\2|\36\3\2\2\2}~\7n\2\2~\177")
        buf.write("\7k\2\2\177\u0080\7p\2\2\u0080\u0081\7g\2\2\u0081 \3\2")
        buf.write("\2\2\u0082\u0083\7n\2\2\u0083\"\3\2\2\2\u0084\u0085\7")
        buf.write("c\2\2\u0085\u0086\7t\2\2\u0086\u0087\7e\2\2\u0087$\3\2")
        buf.write("\2\2\u0088\u0089\7c\2\2\u0089&\3\2\2\2\u008a\u008b\7-")
        buf.write("\2\2\u008b\u008c\7-\2\2\u008c(\3\2\2\2\u008d\u008e\7/")
        buf.write("\2\2\u008e\u008f\7/\2\2\u008f*\3\2\2\2\u0090\u0091\7*")
        buf.write("\2\2\u0091,\3\2\2\2\u0092\u0093\7+\2\2\u0093.\3\2\2\2")
        buf.write("\u0094\u0095\7\'\2\2\u0095\60\3\2\2\2\u0096\u0097\7\61")
        buf.write("\2\2\u0097\62\3\2\2\2\u0098\u0099\7\61\2\2\u0099\u009a")
        buf.write("\7\61\2\2\u009a\64\3\2\2\2\u009b\u009c\7,\2\2\u009c\66")
        buf.write("\3\2\2\2\u009d\u009e\7-\2\2\u009e8\3\2\2\2\u009f\u00a0")
        buf.write("\7/\2\2\u00a0:\3\2\2\2\u00a1\u00a2\7u\2\2\u00a2\u00a3")
        buf.write("\7k\2\2\u00a3\u00a4\7p\2\2\u00a4<\3\2\2\2\u00a5\u00a6")
        buf.write("\7e\2\2\u00a6\u00a7\7q\2\2\u00a7\u00a8\7u\2\2\u00a8>\3")
        buf.write("\2\2\2\u00a9\u00aa\7v\2\2\u00aa\u00ab\7c\2\2\u00ab\u00ac")
        buf.write("\7p\2\2\u00ac@\3\2\2\2\u00ad\u00ae\7r\2\2\u00ae\u00af")
        buf.write("\7q\2\2\u00af\u00b0\7y\2\2\u00b0B\3\2\2\2\u00b1\u00b2")
        buf.write("\7t\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5")
        buf.write("\7f\2\2\u00b5D\3\2\2\2\u00b6\u00b7\7c\2\2\u00b7\u00b8")
        buf.write("\7d\2\2\u00b8\u00b9\7u\2\2\u00b9F\3\2\2\2\u00ba\u00bb")
        buf.write("\t\2\2\2\u00bbH\3\2\2\2\u00bc\u00be\7/\2\2\u00bd\u00bc")
        buf.write("\3\2\2\2\u00bd\u00be\3\2\2\2\u00be\u00c0\3\2\2\2\u00bf")
        buf.write("\u00c1\t\3\2\2\u00c0\u00bf\3\2\2\2\u00c1\u00c2\3\2\2\2")
        buf.write("\u00c2\u00c0\3\2\2\2\u00c2\u00c3\3\2\2\2\u00c3J\3\2\2")
        buf.write("\2\u00c4\u00c6\t\4\2\2\u00c5\u00c4\3\2\2\2\u00c6\u00c7")
        buf.write("\3\2\2\2\u00c7\u00c5\3\2\2\2\u00c7\u00c8\3\2\2\2\u00c8")
        buf.write("L\3\2\2\2\6\2\u00bd\u00c2\u00c7\2")
        return buf.getvalue()


class twoeightyLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    ID = 35
    INT = 36
    COLOUR = 37

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'='", "'ms'", "'s'", "':'", "'clr'", "'clear'", "'colour'", 
            "'#'", "'rect'", "'r'", "','", "'circle'", "'c'", "'line'", 
            "'l'", "'arc'", "'a'", "'++'", "'--'", "'('", "')'", "'%'", 
            "'/'", "'//'", "'*'", "'+'", "'-'", "'sin'", "'cos'", "'tan'", 
            "'pow'", "'rand'", "'abs'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "INT", "COLOUR" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "ID", "INT", "COLOUR" ]

    grammarFileName = "twoeighty.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


